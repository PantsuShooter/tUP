//
//  AuthorizationStoryInteractor.swift
//  tUP
//
//  Created by Home on 07.03.2020.
//  Copyright (c) 2020 Home. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AuthorizationStoryBusinessLogic
{
    func getRandomPhoto(request: AuthorizationStory.Photo.Request)
}

protocol AuthorizationStoryDataStore {

}

class AuthorizationStoryInteractor: AuthorizationStoryBusinessLogic, AuthorizationStoryDataStore {
  
    var presenter: AuthorizationStoryPresentationLogic?
    var worker = AuthorizationStoryWorker()

    
    func getRandomPhoto(request: AuthorizationStory.Photo.Request) {
    
        worker.getRandomPhoto(completionBlock: { [weak self] photo, error in
            
            let response = AuthorizationStory.Photo.Response(photo: photo, error: error)
            self?.presenter?.presentRandomPhoto(response: response)
            
//            if let photo = photo {
//                let response = AuthorizationStory.Photo.Response(photo: photo, error: nil)
//                self?.presenter?.presentRandomPhoto(response: response)
//            }
//
//            if let error = error {
//                let response = AuthorizationStory.Photo.Response(photo: nil, error: error)
//                self?.presenter?.presentRandomPhoto(response: response)
//            }
        })
    }
}
