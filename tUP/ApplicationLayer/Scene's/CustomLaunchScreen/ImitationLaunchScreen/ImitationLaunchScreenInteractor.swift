//
//  ImitationLaunchScreenInteractor.swift
//  tUP
//
//  Created by Home on 07.03.2020.
//  Copyright (c) 2020 Home. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ImitationLaunchScreenBusinessLogic {
    func getRandomPhoto(request: ImitationLaunchScreen.PhotoInfo.Request)
    func loadPhoto(request: ImitationLaunchScreen.PhotoPreview.Request)
    
    func setPhoto(reques: ImitationLaunchScreen.PhotoToSet.Request)
}

protocol ImitationLaunchScreenDataStore {
    var image: UIImage? { get set }
}

class ImitationLaunchScreenInteractor: ImitationLaunchScreenBusinessLogic, ImitationLaunchScreenDataStore {
      
    var image: UIImage?
    
    var presenter: ImitationLaunchScreenPresentationLogic?
    var worker = ImitationLaunchScreenWorker()
    

    func getRandomPhoto(request: ImitationLaunchScreen.PhotoInfo.Request) {
    
        worker.getRandomPhoto(completionBlock: { [weak self] photo, error in
            let response = ImitationLaunchScreen.PhotoInfo.Response(photo: photo, error: error)
            self?.presenter?.presentRandomPhotoInfo(response: response)
        })
    }
    
    func loadPhoto(request: ImitationLaunchScreen.PhotoPreview.Request) {
        
        worker.getPhotoBy(url: request.imageLink) { [weak self] image, error in
            let response = ImitationLaunchScreen.PhotoPreview.Response(photo: image, error: error)
            self?.presenter?.presentPhoto(response: response)
        }
    }
    
    func setPhoto(reques: ImitationLaunchScreen.PhotoToSet.Request) {
        
        image = reques.photo
        
        let response = ImitationLaunchScreen.PhotoToSet.Response()
        presenter?.presentPhotoToSet(response: response)
    }
}
